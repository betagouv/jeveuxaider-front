export default {
  computed: {
    notificationResolver () {
      switch (this.notification.type) {
        case 'App\\Notifications\\ParticipationCreated':
          return {
            emoji: '‚úä',
            message: 'Votre demande de participation **a bien √©t√© enregistr√©e**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\ParticipationBeingProcessed':
          return {
            emoji: '‚è≥',
            message: 'Votre demande de participation **est en cours de traitement**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\ParticipationValidated':
          return {
            emoji: 'üòá',
            message: 'Votre demande de participation **a √©t√© valid√©e**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\ParticipationDeclined':
          return {
            emoji: 'üôÅ',
            message: 'Votre demande de participation **a √©t√© refus√©e**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\ParticipationCanceled':
          return {
            emoji: 'üôÅ',
            message: 'Votre demande de participation **a √©t√© annul√©e**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\DocumentSubmitted':
          return {
            emoji: 'üì•',
            message: 'Une **nouvelle ressource** est accessible dans **votre espace**',
            contexteIcon: 'RiDownload2Line',
            contexte: this.notification.data.ressource_title,
            redirection: '/admin/ressources'
          }
        case 'App\\Notifications\\StructureSubmitted':
          return {
            emoji: 'üè´',
            message: 'Une nouvelle organisation est **en attente de validation** dans votre d√©partement',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.structure_name,
            redirection: `/admin/organisations/${this.notification.data.structure_id}`
          }
        case 'App\\Notifications\\MissionAlmostFull':
          return {
            emoji: 'üî•',
            message: 'Votre mission est **presque compl√®te**',
            contexteIcon: 'RiBuildingFill',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\ParticipationWaitingValidation':
          return {
            emoji: 'üëä',
            message: 'Vous avez une **nouvelle demande de participation**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/messages/${this.notification.data.conversation_id}`
          }
        case 'App\\Notifications\\MissionBeingProcessed':
          return {
            emoji: '‚è≥',
            message: 'Votre mission est **en cours de traitement**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\MissionReactivated':
          return {
            emoji: 'ü•≥',
            message: 'Votre mission est **de nouveau active**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\MissionDeactivated':
          return {
            emoji: 'üò¢',
            message: 'Votre mission a √©t√© **d√©sactiv√©e**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\MissionSignaled':
          return {
            emoji: 'üò¢',
            message: 'Votre mission a √©t√© **signal√©e**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\MissionValidated':
          return {
            emoji: 'üëç',
            message: 'Votre mission a √©t√© **valid√©e**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\MissionWaitingValidation':
          return {
            emoji: 'üôè',
            message: 'Votre mission est **en attente de validation**',
            contexteIcon: 'RiTeamLine',
            contexte: this.notification.data.mission_name,
            redirection: `/admin/missions/${this.notification.data.mission_id}`
          }
        case 'App\\Notifications\\ResetPassword':
          return {
            emoji: 'üîê',
            message: 'Une demande de **r√©initialisation de votre mot de passe** a √©t√© effectu√©e',
            redirection: null
          }
        default:
          return {
            emoji: '‚úä',
            message: 'Nouvelle notification',
            contexte: this.notification.type,
            redirection: null
          }
      }
    }
  },
  methods: {
    handleClick (notification) {
      if (this.notificationResolver.redirection) {
        this.$router.push(this.notificationResolver.redirection)
      }
      if (this.notification.read_at === null && !this.$store.state.auth.isImpersonate) {
        this.$store.dispatch('notifications/markNotificationAsRead', notification)
        this.$store.commit('notifications/decrementUnreadNotificationsCount')
        this.$emit('refetch')
      }
    }
  }
}
